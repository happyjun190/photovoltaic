<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!-- Begin: 设置公用的配置，简化后面的配置 -->
	<!-- MySQL Hikari Datasource -->
	<!--<bean id="baseDataSource" abstract="true" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		&lt;!&ndash; <property name="jdbcUrl" value="${jdbc.urlHead}${jdbc.db1}${jdbc.urlParams}" /> &ndash;&gt; &lt;!&ndash; 各个数据源自己指定 &ndash;&gt;
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		&lt;!&ndash; 连接只读数据库时配置为true， 保证安全 &ndash;&gt;
		<property name="readOnly" value="false" />
		&lt;!&ndash; 等待从连接池中获得连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 &ndash;&gt;
		<property name="connectionTimeout" value="30000" />
		&lt;!&ndash; 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 &ndash;&gt;
		<property name="idleTimeout" value="600000" />
		&lt;!&ndash; 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒以上，参考MySQL wait_timeout参数（show variables like '%timeout%';） &ndash;&gt;
		<property name="maxLifetime" value="1765000" />
		&lt;!&ndash; 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) &ndash;&gt;
		<property name="maximumPoolSize" value="15" />
	</bean>
	
	
	&lt;!&ndash; myBatis mapper文件位置 &ndash;&gt;
	<bean id="baseSqlSessionFactory" abstract="true" class="org.mybatis.spring.SqlSessionFactoryBean">
		&lt;!&ndash; <property name="dataSource" ref="ds2" /> &ndash;&gt; &lt;!&ndash; 各个数据源自己指定dataSource ref&ndash;&gt;
		<property name="mapperLocations" value="classpath:com/photovoltaic/mapper/*/*.xml" />
	</bean>
	
	
	<bean id="ds1" parent="${jdbc.baseDatasource}">
		<property name="jdbcUrl" value="${jdbc.urlHead}${jdbc.db1}${jdbc.urlParams}" />
	</bean>
	
	&lt;!&ndash; myBatis mapper文件位置 &ndash;&gt;
	<bean id="sqlSessionFactory1" parent="baseSqlSessionFactory">
		<property name="dataSource" ref="ds1" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.photovoltaic.dao" />
		<property name="annotationClass" value="com.photovoltaic.repositories.GftwRepositories" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1" />
	</bean>

	&lt;!&ndash; 使用Spring Data的ChainedTransactionManager，缺省的txManager &ndash;&gt;
	<bean id="transactionManager" class="org.springframework.data.transaction.ChainedTransactionManager" >
		<constructor-arg>
            <list>
	            <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
					<property name="dataSource" ref="ds1" />
				</bean>
            </list>
		</constructor-arg>
	</bean>
	
	&lt;!&ndash; 扫描@Transactional标注，并指定一个缺省的transaction-manager &ndash;&gt;
	<tx:annotation-driven transaction-manager="transactionManager" />-->


	<!-- 引入数据库配置文件 -->
	<!--<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:/config/property/jdbc2.properties" />
	</bean>-->

	<!-- 数据库配置 -->
	<bean id="dataSource_1" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${dataSource_1.diverClassName}" />
		<property name="url" value="${dataSource_1.url}" />
		<property name="username" value="${dataSource_1.username}" />
		<property name="password" value="${dataSource_1.password}" />
		<property name="initialSize" value="${dataSource_1.initialSize}" />
		<property name="maxActive" value="${dataSource_1.maxActive}" />
		<property name="maxIdle" value="${dataSource_1.maxIdle}" />
		<property name="minIdle" value="${dataSource_1.minIdle}" />
		<property name="maxWait" value="${dataSource_1.maxWait}" />
		<property name="testWhileIdle" value="${dataSource_1.testWhileIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${dataSource_1.timeBetweenEvictionRunsMillis}" />
		<property name="numTestsPerEvictionRun" value="${dataSource_1.numTestsPerEvictionRun}" />
		<property name="minEvictableIdleTimeMillis" value="${dataSource_1.minEvictableIdleTimeMillis}" />
		<property name="poolPreparedStatements" value="${dataSource_1.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${dataSource_1.maxOpenPreparedStatements}" />
		<property name="defaultAutoCommit" value="${dataSource_1.defaultAutoCommit}" />
		<property name="removeAbandoned" value="${dataSource_1.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${dataSource_1.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${dataSource_1.logAbandoned}" />
	</bean>

	<!-- 扫描dao层的接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.photovoltaic.dao.**" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 扫描dao层的xml文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_1" />
		<property name="mapperLocations" value="classpath:com/photovoltaic/mapper/*/*.xml"></property>
	</bean>

	<!-- 事物管理 -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_1" />
	</bean>

</beans>